{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "ERROR_CarPooling",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressToRides",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "bookRide",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "cancelRide",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "completionStatus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rf",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "t",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "td",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cd",
          "type": "string"
        }
      ],
      "name": "createRide",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRides",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "array",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "getIndex",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "getRide",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserRides",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "rideCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rideCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rideKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rides",
      "outputs": [
        {
          "internalType": "address",
          "name": "driver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxPassengers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rideFare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tripDetails",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "carDetails",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rideId",
          "type": "uint256"
        }
      ],
      "name": "updateStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x137d5f4a70508f1ec186ff12efa6650d707e372ea6577796e589467b2fb21883",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3954716",
    "logsBloom": "0x
    "blockHash": "0x79bc742c30867756c5d779deb3d73b767b54c746e5723ca6553d47c9ab6155fd",
    "transactionHash": "0x137d5f4a70508f1ec186ff12efa6650d707e372ea6577796e589467b2fb21883",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3954716",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f70c56f6b2ed2590e7ba10eef0b81e37",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ERROR_CarPooling\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToRides\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"bookRide\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"cancelRide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"completionStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"td\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cd\",\"type\":\"string\"}],\"name\":\"createRide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRides\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"getRide\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserRides\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"rideCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rideCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rideKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rides\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"driver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPassengers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rideFare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tripDetails\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"carDetails\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rideId\",\"type\":\"uint256\"}],\"name\":\"updateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CarPooling.sol\":\"CarPooling\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CarPooling.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\n// Create ride\\n// book ride\\n// withdraw money for ride\\n// cancel ride :- driver(return all money back to passengers), passenger(return deducted amount back to passenger)\\n// get all ride :- either make an array to save keys in contract itself or use getALL for the first time to get all the keys then maintain them in the frontend\\n// get index function :- to remove repeated code for getting the index\\n\\n// Tests\\n// create a ride\\n// get all rides, single ride and user rides\\n// book a ride\\n// mark completion status by passenger\\n// cancel by passenger and by driver\\n// withdraw money via driver\\n\\n// Things that can be implemented in this contract \\n// 1. Fallback functions \\n// 2. Time based cancellation refund system\\n// 3. Events \\n// 4. Writing tests (just in case if you feel like)\\n\\nerror ERROR_CarPooling(string message);\\n\\ncontract CarPooling {\\n    struct Ride {\\n        address driver; // time // locations (source and destination)\\n        address[] passengers;\\n        uint256 maxPassengers;\\n        uint256 rideFare; // co ordinates des co ordinates save -- passenger ride filter\\n        uint256 rideId;\\n        uint256 time; // startTime\\n        string tripDetails; // source and des\\n        string carDetails; // car type ac non ac\\n    }\\n\\n    mapping(uint256 => Ride) public rides;\\n    mapping(address => uint256[]) public addressToRides;\\n    mapping(uint256 => uint256) public completionStatus;\\n\\n    uint256 public rideCount = 0;\\n    uint256[] public rideKeys; // delete when ride is cancelled\\n\\n    function createRide(\\n        uint256 mp,\\n        uint256 rf,\\n        uint256 t,\\n        string memory td,\\n        string memory cd\\n    ) public {\\n        rideCount += 1;\\n        uint256 rid = rideCount;\\n        address[] memory p;\\n        rides[rid] = Ride(msg.sender, p, mp, rf, rid, t, td, cd);\\n\\n        addressToRides[msg.sender].push(rid);\\n        completionStatus[rid] = 0;\\n        rideKeys.push(rid);\\n    }\\n\\n    function bookRide(uint256 rideId) public payable duplicate(rideId) {\\n        rides[rideId].passengers.push(msg.sender);\\n        addressToRides[msg.sender].push(rideId);\\n    }\\n\\n    modifier duplicate(uint256 rideId) {\\n        Ride memory r = rides[rideId];\\n        if (msg.sender == r.driver || r.passengers.length == r.maxPassengers) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Driver cannot book the ride or maximum passengers reached\\\"\\n            });\\n        }\\n        for (uint256 i = 0; i < r.passengers.length; i++) {\\n            if (msg.sender == r.passengers[i]) {\\n                revert ERROR_CarPooling({\\n                    message: \\\"You have already booked the ride\\\"\\n                });\\n            }\\n        }\\n        _;\\n    }\\n\\n    function updateStatus(uint256 rideId) public {\\n        // completion of ride by passengers\\n        address passenger = msg.sender;\\n        uint256[] memory pRides = addressToRides[passenger];\\n        (bool exists, uint256 index) = getIndex(pRides, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Ride is not registered with passenger\\\"\\n            });\\n        }\\n\\n        completionStatus[rideId] += 1;\\n\\n        // erase this ride from passengers list\\n        addressToRides[passenger][index] = pRides[pRides.length - 1];\\n        addressToRides[passenger].pop();\\n    }\\n\\n    function rideCompleted(uint256 rideId) public {\\n        // driver withdrawing money\\n        if (msg.sender != rides[rideId].driver) {\\n            revert ERROR_CarPooling({message: \\\"Sender is not the driver\\\"});\\n        }\\n        if (completionStatus[rideId] != rides[rideId].passengers.length) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Not all passengers have marked the ride as completed\\\"\\n            });\\n        }\\n\\n        uint256 count = rides[rideId].passengers.length;\\n        uint256 amount = count * rides[rideId].rideFare;\\n        amount = amount * 1e18;\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        require(callSuccess, \\\"Call method failed\\\");\\n\\n        // erase ride from drivers list erase completion status for this ride id\\n        completionStatus[rideId] = 0;\\n        uint256[] memory driverRides = addressToRides[msg.sender];\\n        (bool exists, uint256 index) = getIndex(driverRides, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({\\n                message: \\\"Ride is not registerd with driver\\\"\\n            });\\n        }\\n\\n        addressToRides[msg.sender][index] = driverRides[driverRides.length - 1];\\n        addressToRides[msg.sender].pop();\\n\\n        // erase ride from rides mapping as ride is completed\\n        rides[rideId] = rides[0]; // rides[0] is never given anything so will put default values back in rideId\\n\\n        // erase rideId from rideKeys\\n        uint256[] memory keys = rideKeys;\\n        (exists, index) = getIndex(keys, rideId);\\n\\n        if (!exists) {\\n            revert ERROR_CarPooling({message: \\\"Key does not exist\\\"});\\n        }\\n\\n        rideKeys[index] = keys[keys.length - 1];\\n        rideKeys.pop();\\n    }\\n\\n    function cancelRide(uint256 rideId) public {\\n        // two cases\\n        // 1. Either cancelled by the driver\\n        // 2. Or cancelled by one of the passegners\\n\\n        Ride memory r = rides[rideId];\\n        if (msg.sender == r.driver) {\\n            // return full money back to all passengers\\n            address[] memory passengers = r.passengers;\\n            uint256 amount = r.rideFare;\\n            amount = amount * 1e18;\\n\\n            for (uint256 i = 0; i < passengers.length; i++) {\\n                address p = passengers[i];\\n                (bool callSuccess, ) = payable(p).call{value: amount}(\\\"\\\");\\n                require(callSuccess, \\\"Call method failed\\\");\\n            }\\n\\n            // remove ride from driver's list\\n            uint256[] memory driverRides = addressToRides[msg.sender];\\n            (bool exists, uint256 index) = getIndex(driverRides, rideId);\\n\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Ride is not registered with the user\\\");\\n            }\\n\\n            addressToRides[msg.sender][index] = driverRides[\\n                driverRides.length - 1\\n            ];\\n            addressToRides[msg.sender].pop();\\n\\n            // remove ride from rides mapping as well as the ride is deleted\\n            rides[rideId] = rides[0];\\n\\n            // remove the rideId from ride keys\\n            uint256[] memory keys = rideKeys;\\n            (exists, index) = getIndex(keys, rideId);\\n\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Key does not exist\\\");\\n            }\\n\\n            rideKeys[index] = keys[keys.length - 1];\\n            rideKeys.pop();\\n\\n            // reset the completion status\\n            completionStatus[rideId] = 0;\\n        } else {\\n            // passenger cancels\\n            // erase address from rides passenger array\\n            uint256 index;\\n            address passenger = msg.sender;\\n            address[] memory passengers = r.passengers;\\n            for (uint256 i = 0; i < passengers.length; i++) {\\n                if (passengers[i] == passenger) {\\n                    index = i;\\n                    break;\\n                }\\n            }\\n            rides[rideId].passengers[index] = passengers[passengers.length - 1];\\n            rides[rideId].passengers.pop();\\n\\n            // erases ride from passengers rides list\\n            bool exists;\\n            uint256[] memory userRides = addressToRides[passenger];\\n            (exists, index) = getIndex(userRides, rideId);\\n            if (!exists) {\\n                revert ERROR_CarPooling(\\\"Ride is not registered with user\\\");\\n            }\\n            addressToRides[msg.sender][index] = userRides[userRides.length - 1];\\n            addressToRides[msg.sender].pop();\\n\\n            // return half of the money back to passenger  ( can make it time based in future)\\n            uint256 amount = r.rideFare;\\n            amount = amount / 2;\\n            amount = amount * 1e18;\\n            (bool callSuccess1, ) = payable(passenger).call{value: amount}(\\\"\\\");\\n            require(callSuccess1, \\\"Call method failed\\\");\\n\\n            // compensate the driver with some money, half of ride fare as of now (fixed amount or maybe some time based amount for him as well)\\n            (bool callSuccess2, ) = payable(r.driver).call{value: amount}(\\\"\\\");\\n            require(callSuccess2, \\\"Call method failed\\\");\\n        }\\n    }\\n\\n    function getIndex(\\n        uint256[] memory array,\\n        uint256 val\\n    ) public pure returns (bool, uint256) {\\n        uint256 index = 0;\\n        bool exists = false;\\n        for (uint256 i = 0; i < array.length; i++) {\\n            if (array[i] == val) {\\n                index = i;\\n                exists = true;\\n                break;\\n            }\\n        }\\n\\n        return (exists, index);\\n    }\\n\\n    function getRide(\\n        uint256 rideId\\n    )\\n        public\\n        view\\n        returns (\\n            address,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            string memory,\\n            string memory\\n        )\\n    {\\n        Ride memory r = rides[rideId];\\n        return (\\n            r.driver,\\n            r.passengers.length,\\n            r.maxPassengers,\\n            r.rideFare,\\n            r.rideId,\\n            r.time,\\n            r.tripDetails,\\n            r.carDetails\\n        );\\n    }\\n\\n    function getUserRides()\\n        public\\n        view\\n        returns (\\n            address[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            string[] memory\\n        )\\n    {\\n        uint256[] memory userRides = addressToRides[msg.sender];\\n\\n        address[] memory drivers = new address[](userRides.length);\\n        uint256[] memory currentPassengers = new uint256[](userRides.length);\\n        uint256[] memory maxPassengers = new uint256[](userRides.length);\\n        uint256[] memory rideFare = new uint256[](userRides.length);\\n        uint256[] memory rideId = new uint256[](userRides.length);\\n        uint256[] memory time = new uint256[](userRides.length);\\n        string[] memory td = new string[](userRides.length);\\n        string[] memory cd = new string[](userRides.length);\\n\\n        for (uint256 i = 0; i < userRides.length; i++) {\\n            Ride memory r = rides[userRides[i]]; // CHECK IF RIDE EXISTS FOR GIVEN ID OR NOT\\n            if (r.rideId != 0) {\\n                drivers[i] = r.driver;\\n                currentPassengers[i] = r.passengers.length;\\n                maxPassengers[i] = r.maxPassengers;\\n                rideFare[i] = r.rideFare;\\n                rideId[i] = r.rideId;\\n                time[i] = r.time;\\n                td[i] = r.tripDetails;\\n                cd[i] = r.carDetails;\\n            }\\n        }\\n\\n        return (\\n            drivers,\\n            currentPassengers,\\n            maxPassengers,\\n            rideFare,\\n            rideId,\\n            time,\\n            td\\n        ); // cd not sent coz stack too deep error find a fix\\n    }\\n\\n    function getAllRides()\\n        public\\n        view\\n        returns (\\n            address[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            uint256[] memory,\\n            string[] memory\\n        )\\n    {\\n        uint256[] memory keys = rideKeys;\\n\\n        address[] memory drivers = new address[](keys.length);\\n        uint256[] memory currentPassengers = new uint256[](keys.length);\\n        uint256[] memory maxPassengers = new uint256[](keys.length);\\n        uint256[] memory rideFare = new uint256[](keys.length);\\n        uint256[] memory rideId = new uint256[](keys.length);\\n        uint256[] memory time = new uint256[](keys.length);\\n        string[] memory td = new string[](keys.length);\\n        string[] memory cd = new string[](keys.length);\\n\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            Ride memory r = rides[keys[i]]; // CHECK IF RIDE EXISTS FOR GIVEN ID OR NOT\\n            if (r.rideId != 0) {\\n                drivers[i] = r.driver;\\n                currentPassengers[i] = r.passengers.length;\\n                maxPassengers[i] = r.maxPassengers;\\n                rideFare[i] = r.rideFare;\\n                rideId[i] = r.rideId;\\n                time[i] = r.time;\\n                td[i] = r.tripDetails;\\n                cd[i] = r.carDetails;\\n            }\\n        }\\n\\n        return (\\n            drivers,\\n            currentPassengers,\\n            maxPassengers,\\n            rideFare,\\n            rideId,\\n            time,\\n            td\\n        ); // need to add cd fix stack error\\n    }\\n}\\n\",\"keccak256\":\"0x402b5710fa08dcc4c9153e7a493a5ae5e1edb68d667c3eeda2b4ac0607b88bfe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060035534801561001557600080fd5b506146b0806100256000396000f3fe6080604052600436106100dd5760003560e01c80637c7b0ff41161007f578063b47c188311610059578063b47c188314610312578063c69b2cf61461033d578063c8f8b6c214610359578063d61e720114610382576100dd565b80637c7b0ff41461026757806390aeada2146102ab578063a6f07b29146102e9576100dd565b80635205f112116100bb5780635205f11214610185578063595c9609146101c8578063729a708114610205578063787660c314610236576100dd565b80630294e77f146100e2578063119385621461011f57806319d60f6214610148575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906132b6565b6103ab565b60405161011691906132f2565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906132b6565b6103cf565b005b34801561015457600080fd5b5061016f600480360381019061016a91906132b6565b6109e5565b60405161017c91906132f2565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a791906132b6565b6109fd565b6040516101bf97969594939291906133de565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190613487565b610b6f565b6040516101fc91906132f2565b60405180910390f35b34801561021157600080fd5b5061021a610ba0565b60405161022d979695949392919061374f565b60405180910390f35b34801561024257600080fd5b5061024b6112bf565b60405161025e979695949392919061374f565b60405180910390f35b34801561027357600080fd5b5061028e600480360381019061028991906132b6565b6119a1565b6040516102a29897969594939291906137ef565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906139c3565b611c44565b6040516102e0929190613a3a565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b91906132b6565b611ca0565b005b34801561031e57600080fd5b50610327612912565b60405161033491906132f2565b60405180910390f35b610357600480360381019061035291906132b6565b612918565b005b34801561036557600080fd5b50610380600480360381019061037b9190613b18565b612d7c565b005b34801561038e57600080fd5b506103a960048036038101906103a491906132b6565b612f6d565b005b600481815481106103bb57600080fd5b906000526020600020016000915090505481565b60008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610472576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161046990613c17565b60405180910390fd5b600080828152602001908152602001600020600101805490506002600083815260200190815260200160002054146104df576040517f971859530000000000000000000000000000000000000000000000000000000081526004016104d690613ca9565b60405180910390fd5b60008060008381526020019081526020016000206001018054905090506000806000848152602001908152602001600020600301548261051f9190613cf8565b9050670de0b6b3a7640000816105359190613cf8565b905060003373ffffffffffffffffffffffffffffffffffffffff168260405161055d90613d6b565b60006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90613dcc565b60405180910390fd5b600060026000868152602001908152602001600020819055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561068757602002820191906000526020600020905b815481526020019060010190808311610673575b5050505050905060008061069b8388611c44565b91509150816106df576040517f971859530000000000000000000000000000000000000000000000000000000081526004016106d690613e5e565b60405180910390fd5b82600184516106ee9190613e7e565b815181106106ff576106fe613eb2565b5b6020026020010151600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061075857610757613eb2565b5b9060005260206000200181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806107b5576107b4613ee1565b5b600190038181906000526020600020016000905590556000808081526020019081526020016000206000808981526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805461086c929190613173565b5060028201548160020155600382015481600301556004820154816004015560058201548160050155600682018160060190816108a99190614132565b50600782018160070190816108be9190614132565b509050506000600480548060200260200160405190810160405280929190818152602001828054801561091057602002820191906000526020600020905b8154815260200190600101908083116108fc575b505050505090506109218189611c44565b809350819450505082610969576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161096090614266565b60405180910390fd5b80600182516109789190613e7e565b8151811061098957610988613eb2565b5b6020026020010151600483815481106109a5576109a4613eb2565b5b906000526020600020018190555060048054806109c5576109c4613ee1565b5b600190038181906000526020600020016000905590555050505050505050565b60026020528060005260406000206000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006018054610a5e90613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8a90613f3f565b8015610ad75780601f10610aac57610100808354040283529160200191610ad7565b820191906000526020600020905b815481529060010190602001808311610aba57829003601f168201915b505050505090806007018054610aec90613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1890613f3f565b8015610b655780601f10610b3a57610100808354040283529160200191610b65565b820191906000526020600020905b815481529060010190602001808311610b4857829003601f168201915b5050505050905087565b60016020528160005260406000208181548110610b8b57600080fd5b90600052602060002001600091509150505481565b60608060608060608060606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c3657602002820191906000526020600020905b815481526020019060010190808311610c22575b505050505090506000815167ffffffffffffffff811115610c5a57610c59613880565b5b604051908082528060200260200182016040528015610c885781602001602082028036833780820191505090505b5090506000825167ffffffffffffffff811115610ca857610ca7613880565b5b604051908082528060200260200182016040528015610cd65781602001602082028036833780820191505090505b5090506000835167ffffffffffffffff811115610cf657610cf5613880565b5b604051908082528060200260200182016040528015610d245781602001602082028036833780820191505090505b5090506000845167ffffffffffffffff811115610d4457610d43613880565b5b604051908082528060200260200182016040528015610d725781602001602082028036833780820191505090505b5090506000855167ffffffffffffffff811115610d9257610d91613880565b5b604051908082528060200260200182016040528015610dc05781602001602082028036833780820191505090505b5090506000865167ffffffffffffffff811115610de057610ddf613880565b5b604051908082528060200260200182016040528015610e0e5781602001602082028036833780820191505090505b5090506000875167ffffffffffffffff811115610e2e57610e2d613880565b5b604051908082528060200260200182016040528015610e6157816020015b6060815260200190600190039081610e4c5790505b5090506000885167ffffffffffffffff811115610e8157610e80613880565b5b604051908082528060200260200182016040528015610eb457816020015b6060815260200190600190039081610e9f5790505b50905060005b89518110156112975760008060008c8481518110610edb57610eda613eb2565b5b60200260200101518152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015610fd857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f8e575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805461101990613f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461104590613f3f565b80156110925780601f1061106757610100808354040283529160200191611092565b820191906000526020600020905b81548152906001019060200180831161107557829003601f168201915b505050505081526020016007820180546110ab90613f3f565b80601f01602080910402602001604051908101604052809291908181526020018280546110d790613f3f565b80156111245780601f106110f957610100808354040283529160200191611124565b820191906000526020600020905b81548152906001019060200180831161110757829003601f168201915b505050505081525050905060008160800151146112895780600001518a838151811061115357611152613eb2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151518983815181106111a6576111a5613eb2565b5b60200260200101818152505080604001518883815181106111ca576111c9613eb2565b5b60200260200101818152505080606001518783815181106111ee576111ed613eb2565b5b602002602001018181525050806080015186838151811061121257611211613eb2565b5b6020026020010181815250508060a0015185838151811061123657611235613eb2565b5b6020026020010181815250508060c0015184838151811061125a57611259613eb2565b5b60200260200101819052508060e0015183838151811061127d5761127c613eb2565b5b60200260200101819052505b508080600101915050610eba565b50878787878787879f509f509f509f509f509f509f5050505050505050505090919293949596565b60608060608060608060606000600480548060200260200160405190810160405280929190818152602001828054801561131857602002820191906000526020600020905b815481526020019060010190808311611304575b505050505090506000815167ffffffffffffffff81111561133c5761133b613880565b5b60405190808252806020026020018201604052801561136a5781602001602082028036833780820191505090505b5090506000825167ffffffffffffffff81111561138a57611389613880565b5b6040519080825280602002602001820160405280156113b85781602001602082028036833780820191505090505b5090506000835167ffffffffffffffff8111156113d8576113d7613880565b5b6040519080825280602002602001820160405280156114065781602001602082028036833780820191505090505b5090506000845167ffffffffffffffff81111561142657611425613880565b5b6040519080825280602002602001820160405280156114545781602001602082028036833780820191505090505b5090506000855167ffffffffffffffff81111561147457611473613880565b5b6040519080825280602002602001820160405280156114a25781602001602082028036833780820191505090505b5090506000865167ffffffffffffffff8111156114c2576114c1613880565b5b6040519080825280602002602001820160405280156114f05781602001602082028036833780820191505090505b5090506000875167ffffffffffffffff8111156115105761150f613880565b5b60405190808252806020026020018201604052801561154357816020015b606081526020019060019003908161152e5790505b5090506000885167ffffffffffffffff81111561156357611562613880565b5b60405190808252806020026020018201604052801561159657816020015b60608152602001906001900390816115815790505b50905060005b89518110156119795760008060008c84815181106115bd576115bc613eb2565b5b60200260200101518152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156116ba57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611670575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820180546116fb90613f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461172790613f3f565b80156117745780601f1061174957610100808354040283529160200191611774565b820191906000526020600020905b81548152906001019060200180831161175757829003601f168201915b5050505050815260200160078201805461178d90613f3f565b80601f01602080910402602001604051908101604052809291908181526020018280546117b990613f3f565b80156118065780601f106117db57610100808354040283529160200191611806565b820191906000526020600020905b8154815290600101906020018083116117e957829003601f168201915b5050505050815250509050600081608001511461196b5780600001518a838151811061183557611834613eb2565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080602001515189838151811061188857611887613eb2565b5b60200260200101818152505080604001518883815181106118ac576118ab613eb2565b5b60200260200101818152505080606001518783815181106118d0576118cf613eb2565b5b60200260200101818152505080608001518683815181106118f4576118f3613eb2565b5b6020026020010181815250508060a0015185838151811061191857611917613eb2565b5b6020026020010181815250508060c0015184838151811061193c5761193b613eb2565b5b60200260200101819052508060e0015183838151811061195f5761195e613eb2565b5b60200260200101819052505b50808060010191505061159c565b50878787878787879f509f509f509f509f509f509f5050505050505050505090919293949596565b60008060008060008060608060008060008b8152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015611aa857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a5e575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054611ae990613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1590613f3f565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b50505050508152602001600782018054611b7b90613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba790613f3f565b8015611bf45780601f10611bc957610100808354040283529160200191611bf4565b820191906000526020600020905b815481529060010190602001808311611bd757829003601f168201915b505050505081525050905080600001518160200151518260400151836060015184608001518560a001518660c001518760e001519850985098509850985098509850985050919395975091939597565b60008060008060005b8651811015611c905785878281518110611c6a57611c69613eb2565b5b602002602001015103611c835780925060019150611c90565b8080600101915050611c4d565b5080829350935050509250929050565b6000806000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d9b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d51575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054611ddc90613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0890613f3f565b8015611e555780601f10611e2a57610100808354040283529160200191611e55565b820191906000526020600020905b815481529060010190602001808311611e3857829003601f168201915b50505050508152602001600782018054611e6e90613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9a90613f3f565b8015611ee75780601f10611ebc57610100808354040283529160200191611ee7565b820191906000526020600020905b815481529060010190602001808311611eca57829003601f168201915b5050505050815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361243b57600081602001519050600082606001519050670de0b6b3a764000081611f4f9190613cf8565b905060005b8251811015612037576000838281518110611f7257611f71613eb2565b5b6020026020010151905060008173ffffffffffffffffffffffffffffffffffffffff1684604051611fa290613d6b565b60006040518083038185875af1925050503d8060008114611fdf576040519150601f19603f3d011682016040523d82523d6000602084013e611fe4565b606091505b5050905080612028576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201f90613dcc565b60405180910390fd5b50508080600101915050611f54565b506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156120c357602002820191906000526020600020905b8154815260200190600101908083116120af575b505050505090506000806120d78388611c44565b915091508161211b576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612112906142f8565b60405180910390fd5b826001845161212a9190613e7e565b8151811061213b5761213a613eb2565b5b6020026020010151600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061219457612193613eb2565b5b9060005260206000200181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806121f1576121f0613ee1565b5b600190038181906000526020600020016000905590556000808081526020019081526020016000206000808981526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546122a8929190613173565b5060028201548160020155600382015481600301556004820154816004015560058201548160050155600682018160060190816122e59190614132565b50600782018160070190816122fa9190614132565b509050506000600480548060200260200160405190810160405280929190818152602001828054801561234c57602002820191906000526020600020905b815481526020019060010190808311612338575b5050505050905061235d8189611c44565b8093508194505050826123a5576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161239c90614266565b60405180910390fd5b80600182516123b49190613e7e565b815181106123c5576123c4613eb2565b5b6020026020010151600483815481106123e1576123e0613eb2565b5b9060005260206000200181905550600480548061240157612400613ee1565b5b600190038181906000526020600020016000905590556000600260008a81526020019081526020016000208190555050505050505061290e565b60008033905060008360200151905060005b81518110156124b8578273ffffffffffffffffffffffffffffffffffffffff168282815181106124805761247f613eb2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036124ab578093506124b8565b808060010191505061244d565b5080600182516124c89190613e7e565b815181106124d9576124d8613eb2565b5b6020026020010151600080878152602001908152602001600020600101848154811061250857612507613eb2565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008086815260200190815260200160002060010180548061257557612574613ee1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561263657602002820191906000526020600020905b815481526020019060010190808311612622575b505050505090506126478188611c44565b80965081935050508161268f576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161268690614364565b60405180910390fd5b806001825161269e9190613e7e565b815181106126af576126ae613eb2565b5b6020026020010151600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811061270857612707613eb2565b5b9060005260206000200181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548061276557612764613ee1565b5b6001900381819060005260206000200160009055905560008660600151905060028161279191906143b3565b9050670de0b6b3a7640000816127a79190613cf8565b905060008573ffffffffffffffffffffffffffffffffffffffff16826040516127cf90613d6b565b60006040518083038185875af1925050503d806000811461280c576040519150601f19603f3d011682016040523d82523d6000602084013e612811565b606091505b5050905080612855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284c90613dcc565b60405180910390fd5b6000886000015173ffffffffffffffffffffffffffffffffffffffff168360405161287f90613d6b565b60006040518083038185875af1925050503d80600081146128bc576040519150601f19603f3d011682016040523d82523d6000602084013e6128c1565b606091505b5050905080612905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fc90613dcc565b60405180910390fd5b50505050505050505b5050565b60035481565b806000806000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015612a1457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116129ca575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054612a5590613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a8190613f3f565b8015612ace5780601f10612aa357610100808354040283529160200191612ace565b820191906000526020600020905b815481529060010190602001808311612ab157829003601f168201915b50505050508152602001600782018054612ae790613f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054612b1390613f3f565b8015612b605780601f10612b3557610100808354040283529160200191612b60565b820191906000526020600020905b815481529060010190602001808311612b4357829003601f168201915b5050505050815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612bb157508060400151816020015151145b15612bf1576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612be890614456565b60405180910390fd5b60005b816020015151811015612c9a5781602001518181518110612c1857612c17613eb2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603612c8d576040517f97185953000000000000000000000000000000000000000000000000000000008152600401612c84906144c2565b60405180910390fd5b8080600101915050612bf4565b50600080848152602001908152602001600020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b600160036000828254612d8f91906144e2565b925050819055506000600354905060606040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020018881526020018781526020018381526020018681526020018581526020018481525060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612e649291906131c5565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006019081612ea29190614516565b5060e0820151816007019081612eb89190614516565b50905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505060019003906000526020600020016000909190919091505560006002600084815260200190815260200160002081905550600482908060018154018082558091505060019003906000526020600020016000909190919091505550505050505050565b60003390506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612ffd57602002820191906000526020600020905b815481526020019060010190808311612fe9575b505050505090506000806130118386611c44565b9150915081613055576040517f9718595300000000000000000000000000000000000000000000000000000000815260040161304c9061465a565b60405180910390fd5b600160026000878152602001908152602001600020600082825461307991906144e2565b92505081905550826001845161308f9190613e7e565b815181106130a05761309f613eb2565b5b6020026020010151600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106130f9576130f8613eb2565b5b9060005260206000200181905550600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548061315657613155613ee1565b5b600190038181906000526020600020016000905590555050505050565b8280548282559060005260206000209081019282156131b45760005260206000209182015b828111156131b3578254825591600101919060010190613198565b5b5090506131c1919061324f565b5090565b82805482825590600052602060002090810192821561323e579160200282015b8281111561323d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906131e5565b5b50905061324b919061324f565b5090565b5b80821115613268576000816000905550600101613250565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61329381613280565b811461329e57600080fd5b50565b6000813590506132b08161328a565b92915050565b6000602082840312156132cc576132cb613276565b5b60006132da848285016132a1565b91505092915050565b6132ec81613280565b82525050565b600060208201905061330760008301846132e3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133388261330d565b9050919050565b6133488161332d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561338857808201518184015260208101905061336d565b60008484015250505050565b6000601f19601f8301169050919050565b60006133b08261334e565b6133ba8185613359565b93506133ca81856020860161336a565b6133d381613394565b840191505092915050565b600060e0820190506133f3600083018a61333f565b61340060208301896132e3565b61340d60408301886132e3565b61341a60608301876132e3565b61342760808301866132e3565b81810360a083015261343981856133a5565b905081810360c083015261344d81846133a5565b905098975050505050505050565b6134648161332d565b811461346f57600080fd5b50565b6000813590506134818161345b565b92915050565b6000806040838503121561349e5761349d613276565b5b60006134ac85828601613472565b92505060206134bd858286016132a1565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134fc8161332d565b82525050565b600061350e83836134f3565b60208301905092915050565b6000602082019050919050565b6000613532826134c7565b61353c81856134d2565b9350613547836134e3565b8060005b8381101561357857815161355f8882613502565b975061356a8361351a565b92505060018101905061354b565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6135ba81613280565b82525050565b60006135cc83836135b1565b60208301905092915050565b6000602082019050919050565b60006135f082613585565b6135fa8185613590565b9350613605836135a1565b8060005b8381101561363657815161361d88826135c0565b9750613628836135d8565b925050600181019050613609565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061368b8261334e565b613695818561366f565b93506136a581856020860161336a565b6136ae81613394565b840191505092915050565b60006136c58383613680565b905092915050565b6000602082019050919050565b60006136e582613643565b6136ef818561364e565b9350836020820285016137018561365f565b8060005b8581101561373d578484038952815161371e85826136b9565b9450613729836136cd565b925060208a01995050600181019050613705565b50829750879550505050505092915050565b600060e0820190508181036000830152613769818a613527565b9050818103602083015261377d81896135e5565b9050818103604083015261379181886135e5565b905081810360608301526137a581876135e5565b905081810360808301526137b981866135e5565b905081810360a08301526137cd81856135e5565b905081810360c08301526137e181846136da565b905098975050505050505050565b600061010082019050613805600083018b61333f565b613812602083018a6132e3565b61381f60408301896132e3565b61382c60608301886132e3565b61383960808301876132e3565b61384660a08301866132e3565b81810360c083015261385881856133a5565b905081810360e083015261386c81846133a5565b90509998505050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6138b882613394565b810181811067ffffffffffffffff821117156138d7576138d6613880565b5b80604052505050565b60006138ea61326c565b90506138f682826138af565b919050565b600067ffffffffffffffff82111561391657613915613880565b5b602082029050602081019050919050565b600080fd5b600061393f61393a846138fb565b6138e0565b9050808382526020820190506020840283018581111561396257613961613927565b5b835b8181101561398b578061397788826132a1565b845260208401935050602081019050613964565b5050509392505050565b600082601f8301126139aa576139a961387b565b5b81356139ba84826020860161392c565b91505092915050565b600080604083850312156139da576139d9613276565b5b600083013567ffffffffffffffff8111156139f8576139f761327b565b5b613a0485828601613995565b9250506020613a15858286016132a1565b9150509250929050565b60008115159050919050565b613a3481613a1f565b82525050565b6000604082019050613a4f6000830185613a2b565b613a5c60208301846132e3565b9392505050565b600080fd5b600067ffffffffffffffff821115613a8357613a82613880565b5b613a8c82613394565b9050602081019050919050565b82818337600083830152505050565b6000613abb613ab684613a68565b6138e0565b905082815260208101848484011115613ad757613ad6613a63565b5b613ae2848285613a99565b509392505050565b600082601f830112613aff57613afe61387b565b5b8135613b0f848260208601613aa8565b91505092915050565b600080600080600060a08688031215613b3457613b33613276565b5b6000613b42888289016132a1565b9550506020613b53888289016132a1565b9450506040613b64888289016132a1565b935050606086013567ffffffffffffffff811115613b8557613b8461327b565b5b613b9188828901613aea565b925050608086013567ffffffffffffffff811115613bb257613bb161327b565b5b613bbe88828901613aea565b9150509295509295909350565b7f53656e646572206973206e6f7420746865206472697665720000000000000000600082015250565b6000613c01601883613359565b9150613c0c82613bcb565b602082019050919050565b60006020820190508181036000830152613c3081613bf4565b9050919050565b7f4e6f7420616c6c2070617373656e676572732068617665206d61726b6564207460008201527f6865207269646520617320636f6d706c65746564000000000000000000000000602082015250565b6000613c93603483613359565b9150613c9e82613c37565b604082019050919050565b60006020820190508181036000830152613cc281613c86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613d0382613280565b9150613d0e83613280565b9250828202613d1c81613280565b91508282048414831517613d3357613d32613cc9565b5b5092915050565b600081905092915050565b50565b6000613d55600083613d3a565b9150613d6082613d45565b600082019050919050565b6000613d7682613d48565b9150819050919050565b7f43616c6c206d6574686f64206661696c65640000000000000000000000000000600082015250565b6000613db6601283613359565b9150613dc182613d80565b602082019050919050565b60006020820190508181036000830152613de581613da9565b9050919050565b7f52696465206973206e6f7420726567697374657264207769746820647269766560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000613e48602183613359565b9150613e5382613dec565b604082019050919050565b60006020820190508181036000830152613e7781613e3b565b9050919050565b6000613e8982613280565b9150613e9483613280565b9250828203905081811115613eac57613eab613cc9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613f5757607f821691505b602082108103613f6a57613f69613f10565b5b50919050565b600081549050613f7f81613f3f565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613fe87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613fab565b613ff28683613fab565b95508019841693508086168417925050509392505050565b6000819050919050565b600061402f61402a61402584613280565b61400a565b613280565b9050919050565b6000819050919050565b61404983614014565b61405d61405582614036565b848454613fb8565b825550505050565b600090565b614072614065565b61407d818484614040565b505050565b5b818110156140a15761409660008261406a565b600181019050614083565b5050565b601f8211156140e6576140b781613f86565b6140c084613f9b565b810160208510156140cf578190505b6140e36140db85613f9b565b830182614082565b50505b505050565b600082821c905092915050565b6000614109600019846008026140eb565b1980831691505092915050565b600061412283836140f8565b9150826002028217905092915050565b818103614140575050614218565b61414982613f70565b67ffffffffffffffff81111561416257614161613880565b5b61416c8254613f3f565b6141778282856140a5565b6000601f8311600181146141a65760008415614194578287015490505b61419e8582614116565b865550614211565b601f1984166141b487613f86565b96506141bf86613f86565b60005b828110156141e7578489015482556001820191506001850194506020810190506141c2565b868310156142045784890154614200601f8916826140f8565b8355505b6001600288020188555050505b5050505050505b565b7f4b657920646f6573206e6f742065786973740000000000000000000000000000600082015250565b6000614250601283613359565b915061425b8261421a565b602082019050919050565b6000602082019050818103600083015261427f81614243565b9050919050565b7f52696465206973206e6f7420726567697374657265642077697468207468652060008201527f7573657200000000000000000000000000000000000000000000000000000000602082015250565b60006142e2602483613359565b91506142ed82614286565b604082019050919050565b60006020820190508181036000830152614311816142d5565b9050919050565b7f52696465206973206e6f74207265676973746572656420776974682075736572600082015250565b600061434e602083613359565b915061435982614318565b602082019050919050565b6000602082019050818103600083015261437d81614341565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006143be82613280565b91506143c983613280565b9250826143d9576143d8614384565b5b828204905092915050565b7f4472697665722063616e6e6f7420626f6f6b207468652072696465206f72206d60008201527f6178696d756d2070617373656e67657273207265616368656400000000000000602082015250565b6000614440603983613359565b915061444b826143e4565b604082019050919050565b6000602082019050818103600083015261446f81614433565b9050919050565b7f596f75206861766520616c726561647920626f6f6b6564207468652072696465600082015250565b60006144ac602083613359565b91506144b782614476565b602082019050919050565b600060208201905081810360008301526144db8161449f565b9050919050565b60006144ed82613280565b91506144f883613280565b92508282019050808211156145105761450f613cc9565b5b92915050565b61451f8261334e565b67ffffffffffffffff81111561453857614537613880565b5b6145428254613f3f565b61454d8282856140a5565b600060209050601f831160018114614580576000841561456e578287015190505b6145788582614116565b8655506145e0565b601f19841661458e86613f86565b60005b828110156145b657848901518255600182019150602085019450602081019050614591565b868310156145d357848901516145cf601f8916826140f8565b8355505b6001600288020188555050505b505050505050565b7f52696465206973206e6f7420726567697374657265642077697468207061737360008201527f656e676572000000000000000000000000000000000000000000000000000000602082015250565b6000614644602583613359565b915061464f826145e8565b604082019050919050565b6000602082019050818103600083015261467381614637565b905091905056fea2646970667358221220a786fb640dd878cb6a8b3b37e84810365d92c5ef5f24682839ee3f52fc26929064736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rides",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Ride)23_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "addressToRides",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 37,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "completionStatus",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 40,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rideCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 43,
        "contract": "contracts/CarPooling.sol:CarPooling",
        "label": "rideKeys",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Ride)23_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CarPooling.Ride)",
        "numberOfBytes": "32",
        "value": "t_struct(Ride)23_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ride)23_storage": {
        "encoding": "inplace",
        "label": "struct CarPooling.Ride",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "driver",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "passengers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "maxPassengers",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "rideFare",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "rideId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 18,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "time",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 20,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "tripDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 22,
            "contract": "contracts/CarPooling.sol:CarPooling",
            "label": "carDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}